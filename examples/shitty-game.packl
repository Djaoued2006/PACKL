proc display(rows: int, cols: int, x: int, y: int, target_x: int, target_y: int) {    
    for i: int in (0, rows - 1) {
        for j: int in (0, cols - 1) {
            if (x == i and y == j) {
                write(0, " # ");
            } else if (i == target_x and j == target_y) {
                write(0, "[ ]");
            } else {
                write(0, " . ");
            }
        }
        write(0, "\n");
    }
}

proc display_line(size: int) {
    for i: int in (0, size - 1) {
        write(0, "-");
    }
    write(0, "\n");
}

func update(pos: int, target: int): int {
    if(target > pos) {
        update = pos + 1;
    } else if (target < pos) {
        update = pos - 1;
    } else {
        update = pos;
    }
}

func randomize(v: int, max: int): int {
    randomize = (v * 23 / 2 + 1) % max;
}

proc main() {
    var x: int = 0;
    var y: int = 0;

    var target_x: int = 5;
    var target_y: int = 5;

    var rows: int = 10;
    var cols: int = 10;


    while (1) {
        display(rows, cols, x, y, target_x, target_y);
        x = update(x, target_x);
        y = update(y, target_y);
        display_line(30);
        if (x == target_x and y == target_y) {
            target_x = randomize(target_x, rows);
            target_y = randomize(target_y, cols);
        }
    }
}
